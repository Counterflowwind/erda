// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/erda-project/erda-proto-go/core/monitor/metric/pb (interfaces: MetricServiceServer)

// Package exporter is a generated GoMock package.
package apis

import (
	context "context"
	reflect "reflect"

	pb "github.com/erda-project/erda-proto-go/core/monitor/metric/pb"
	gomock "github.com/golang/mock/gomock"
)

// MockMetricServiceServer is a mock of MetricServiceServer interface.
type MockMetricServiceServer struct {
	ctrl     *gomock.Controller
	recorder *MockMetricServiceServerMockRecorder
}

// MockMetricServiceServerMockRecorder is the mock recorder for MockMetricServiceServer.
type MockMetricServiceServerMockRecorder struct {
	mock *MockMetricServiceServer
}

// NewMockMetricServiceServer creates a new mock instance.
func NewMockMetricServiceServer(ctrl *gomock.Controller) *MockMetricServiceServer {
	mock := &MockMetricServiceServer{ctrl: ctrl}
	mock.recorder = &MockMetricServiceServerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockMetricServiceServer) EXPECT() *MockMetricServiceServerMockRecorder {
	return m.recorder
}

// GeneralQuery mocks base method.
func (m *MockMetricServiceServer) GeneralQuery(arg0 context.Context, arg1 *pb.GeneralQueryRequest) (*pb.GeneralQueryResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GeneralQuery", arg0, arg1)
	ret0, _ := ret[0].(*pb.GeneralQueryResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GeneralQuery indicates an expected call of GeneralQuery.
func (mr *MockMetricServiceServerMockRecorder) GeneralQuery(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GeneralQuery", reflect.TypeOf((*MockMetricServiceServer)(nil).GeneralQuery), arg0, arg1)
}

// GeneralSearch mocks base method.
func (m *MockMetricServiceServer) GeneralSearch(arg0 context.Context, arg1 *pb.GeneralQueryRequest) (*pb.GeneralQueryResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GeneralSearch", arg0, arg1)
	ret0, _ := ret[0].(*pb.GeneralQueryResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GeneralSearch indicates an expected call of GeneralSearch.
func (mr *MockMetricServiceServerMockRecorder) GeneralSearch(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GeneralSearch", reflect.TypeOf((*MockMetricServiceServer)(nil).GeneralSearch), arg0, arg1)
}

// QueryWithInfluxFormat mocks base method.
func (m *MockMetricServiceServer) QueryWithInfluxFormat(arg0 context.Context, arg1 *pb.QueryWithInfluxFormatRequest) (*pb.QueryWithInfluxFormatResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "QueryWithInfluxFormat", arg0, arg1)
	ret0, _ := ret[0].(*pb.QueryWithInfluxFormatResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// QueryWithInfluxFormat indicates an expected call of QueryWithInfluxFormat.
func (mr *MockMetricServiceServerMockRecorder) QueryWithInfluxFormat(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "QueryWithInfluxFormat", reflect.TypeOf((*MockMetricServiceServer)(nil).QueryWithInfluxFormat), arg0, arg1)
}

// QueryWithTableFormat mocks base method.
func (m *MockMetricServiceServer) QueryWithTableFormat(arg0 context.Context, arg1 *pb.QueryWithTableFormatRequest) (*pb.QueryWithTableFormatResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "QueryWithTableFormat", arg0, arg1)
	ret0, _ := ret[0].(*pb.QueryWithTableFormatResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// QueryWithTableFormat indicates an expected call of QueryWithTableFormat.
func (mr *MockMetricServiceServerMockRecorder) QueryWithTableFormat(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "QueryWithTableFormat", reflect.TypeOf((*MockMetricServiceServer)(nil).QueryWithTableFormat), arg0, arg1)
}

// SearchWithInfluxFormat mocks base method.
func (m *MockMetricServiceServer) SearchWithInfluxFormat(arg0 context.Context, arg1 *pb.QueryWithInfluxFormatRequest) (*pb.QueryWithInfluxFormatResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SearchWithInfluxFormat", arg0, arg1)
	ret0, _ := ret[0].(*pb.QueryWithInfluxFormatResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// SearchWithInfluxFormat indicates an expected call of SearchWithInfluxFormat.
func (mr *MockMetricServiceServerMockRecorder) SearchWithInfluxFormat(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SearchWithInfluxFormat", reflect.TypeOf((*MockMetricServiceServer)(nil).SearchWithInfluxFormat), arg0, arg1)
}

// SearchWithTableFormat mocks base method.
func (m *MockMetricServiceServer) SearchWithTableFormat(arg0 context.Context, arg1 *pb.QueryWithTableFormatRequest) (*pb.QueryWithTableFormatResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SearchWithTableFormat", arg0, arg1)
	ret0, _ := ret[0].(*pb.QueryWithTableFormatResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// SearchWithTableFormat indicates an expected call of SearchWithTableFormat.
func (mr *MockMetricServiceServerMockRecorder) SearchWithTableFormat(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SearchWithTableFormat", reflect.TypeOf((*MockMetricServiceServer)(nil).SearchWithTableFormat), arg0, arg1)
}
