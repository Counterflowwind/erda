syntax = "proto3";

package erda.core.monitor.expression;
option go_package = "github.com/erda-project/erda-proto-go/core/monitor/expression/pb";
import "google/api/annotations.proto";
import "google/protobuf/struct.proto";
import "github.com/mwitkow/go-proto-validators/validator.proto";
import "common/openapi.proto";
import "core/monitor/alert/alert.proto";

service ExpressionService {
  option (erda.common.openapi_service) = {
    service: "monitor",
    auth: {
      check_login: true,
      check_token: true,
    }
  };
  rpc GetAllAlertEnabledExpression (GetAllAlertEnabledExpressionRequest) returns (GetAllAlertEnabledExpressionResponse) {
    option (google.api.http)     = {
      get: "/api/org/alert/expression"
    };
    option (erda.common.openapi) = {
      path: "/api/org/alert/expression"
    };
  }
  rpc GetAllMetricEnabledExpression (GetAllMetricEnabledExpressionRequest) returns (GetAllMetricEnabledExpressionResponse) {
    option (google.api.http)     = {
      get: "/api/org/metric/expression"
    };
    option (erda.common.openapi) = {
      path: "/api/org/metric/expression"
    };
  }
  rpc GetAllAlertTemplate (GetAllAlertTemplateRequest) returns (GetAllAlertTemplateResponse) {
    option (google.api.http)     = {
      get: "/api/org/template"
    };
    option (erda.common.openapi) = {
      path: "/api/org/template"
    };
  }
}

message GetAllAlertEnabledExpressionRequest {
  int64 pageSize = 1;
  int64 pageNo   = 2;
}

message GetAllAlertEnabledExpressionResponse {
  repeated Expression data = 1;
}

message GetAllMetricEnabledExpressionRequest {
  int64 pageSize = 1;
  int64 pageNo   = 2;
}

message GetAllMetricEnabledExpressionResponse {
  repeated Expression data = 1;
}


message Expression {
  int64                              id         = 1;
  string                             version    = 2;
  map<string, google.protobuf.Value> attributes = 3;
  map<string, google.protobuf.Value> expression = 4;
  bool                               enable     = 5;
  int64                              alertId    = 6 [json_name = "alert_id"];
}

message GetAllAlertTemplateRequest {
  int64 pageNo   = 1;
  int64 pageSize = 2;
}

message GetAllAlertTemplateResponse {
  repeated AlertTemplate data = 1;
}

message AlertTemplate {
  string                             name       = 1;
  string                             alertType  = 2 [json_name = "alert_type"];
  string                             alertIndex = 3 [json_name = "alert_index"];
  string                             target     = 4;
  string                             trigger    = 5;
  string                             title      = 6;
  string                             template   = 7;
  map<string, google.protobuf.Value> formats    = 8;
  string                             version    = 9;
  bool                               enable     = 10;
}
